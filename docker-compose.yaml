version: "3.9"

volumes:
  music:
    driver: local
    driver_opts:
      type: cifs
      device: //192.168.30.242/music-hdd
      o: "credentials=/opt/.cifs,vers=3.0"
  frigate:
    driver_opts:
      type: nfs
      o: "addr=192.168.30.242,nfsvers=4.1,nolock,soft,rw"
      device: ":/volume1/NetBackup/media"
  doubletake:
    driver_opts:
      type: nfs
      o: "addr=192.168.30.242,nfsvers=4.1,nolock,soft,rw"
      device: ":/volume1/NetBackup/media/doubletake"
  plateminder:
    driver_opts:
      type: nfs
      o: "addr=192.168.30.242,nfsvers=4.1,nolock,soft,rw"
      device: ":/volume1/NetBackup/media/plateminder"

services:
  #####################################################
  portainer:
    image: portainer/portainer-ce:2.19.1
    container_name: portainer
    restart: always
    ports:
      - "9000:9000/tcp"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /opt/portainer:/data
    environment:
      - TZ=America/Chicago
  #####################################################
  mosquitto:
    image: eclipse-mosquitto:2.0.18
    container_name: mosquitto
    restart: always
    ports:
      - 1883:1883
      - 9001:9001
    volumes:
      - /opt/mosquitto:/mosquitto
      - /opt/mosquitto/data:/mosquitto/data
      - /opt/mosquitto/log:/mosquitto/log
    depends_on:
      - portainer
  #####################################################
  homeassistant:
    image: "ghcr.io/home-assistant/home-assistant:2023.12.3"
    container_name: homeassistant
    restart: always
    volumes:
      - /opt/homeassistant/config:/config
      - /opt/homeassistant/tmp:/tmp
      - /opt/homeassistant/share:/share
      - /etc/localtime:/etc/localtime:ro
      - music:/media
    privileged: true
    network_mode: host
    depends_on:
      - mosquitto
  #####################################################
  infinitude:
    image: nebulous/infinitude:latest
    container_name: infinitude
    restart: always
    ports:
      - 3000:3000
    volumes:
      - /opt/infinitude/state:/infinitude/state
    environment:
      - APP_SECRET=Pogotudinal
      - PASS_REQS=3000
      - MODE=Production
    hostname: infinitude
    build:
      context: .
      dockerfile: Dockerfile
    network_mode: host
    depends_on:
      - mosquitto
  #####################################################
  nut:
    image: instantlinux/nut-upsd:2.8.0-r4
    container_name: nut
    restart: always
    ports:
      - 3493:3493
    devices:
      - /dev/bus/usb:/dev/bus/usb
    privileged: true
    env_file:
      - ./.env
  #####################################################
  cloudflared:
    image: cloudflare/cloudflared:2023.10.0
    container_name: cloudflared
    restart: always
    network_mode: host
    command: tunnel run
    env_file:
      - ./.env
  #####################################################
  tailscale:
    image: tailscale/tailscale:v1.54.0
    container_name: tailscale
    restart: always
    hostname: tailscale
    volumes:
      - /opt/tailscale:/var/lib
      - /dev/net/tun:/dev/net/tun
    privileged: true
    cap_add:
      - net_admin
      - sys_module
    command: tailscaled
    env_file:
      - ./.env
  #####################################################
  frigate:
    container_name: frigate
    restart: always
    network_mode: bridge
    privileged: true
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    image: ghcr.io/blakeblackshear/frigate:0.13.0-beta7
    devices:
      - /dev/bus/usb:/dev/bus/usb
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /opt/frigate:/config
      - frigate:/media/frigate
      - type: tmpfs
        target: /tmp/cache
        tmpfs:
          size: 1000000000
      - type: tmpfs
        target: /dev/shm
        tmpfs:
          size: 1000000000
    ports:
      - "5005:5000"
      - "8554:8554"
      - "8555:8555"
    env_file:
      - ./.env
    depends_on:
      - mosquitto
  #####################################################
  legocerthub:
    container_name: legocerthub
    restart: always
    image: gregtwallace/legocerthub:v0.15.1
    volumes:
      - /opt/legocerthub:/app/data
    ports:
      - 4050:4050
      - 4060:4060
    env_file:
      - ./.env
    depends_on:
      - mosquitto
  #####################################################
  #  mqdockerup:
  #    container_name: mqdockerup
  #    image: micrib/mqdockerup:1.2.3
  #    restart: always
  #    volumes:
  #      - /var/run/docker.sock:/var/run/docker.sock
  #    environment:
  #      - MQTT_CONNECTIONURI=mqtt://mosquitto:1883
  #    env_file:
  #      - ./.env
  #    depends_on:
  #      - mosquitto
  #####################################################
  plateminder:
    container_name: plateminder
    restart: unless-stopped
    image: sclaflin/plate-minder:0.2.2
    ports:
      - 4000:4000
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - plateminder:/app/data
      - /opt/plateminder/config.yaml:/app/config.yaml
  open-alpr-http-wrapper:
    container_name: open-alpr-http-wrapper
    restart: unless-stopped
    image: sclaflin/open-alpr-http-wrapper:0.2.0
  plate-minder-web:
    container_name: plate-minder-web
    image: sclaflin/plate-minder-web:latest
    restart: unless-stopped
    environment:
      - PLATE_MINDER_URL=http://192.168.30.249:4000
    ports:
      - 8080:80
  #####################################################
  double-take:
    container_name: doubletake
    restart: unless-stopped
    image: skrashevich/double-take:1.13.11.8
    volumes:
      - doubletake:/.storage
    ports:
      - 3001:3000
  #####################################################
  ai-server:
    container_name: codeprojectai
    restart: unless-stopped
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    image: codeproject/ai-server:gpu-2.2.4
    ports:
      - 32168:32168
    volumes:
      - /opt/codeproject/ai:/etc/codeproject/ai
      - /opt/codeproject/modules:/app/modules
  #####################################################
  weatherflow2mqtt:
    container_name: weatherflow2mqtt
    image: briis/weatherflow2mqtt:3.2.2
    restart: unless-stopped
    network_mode: host
    env_file:
      - ./.env-weatherflow
    volumes:
      - /opt/weatherflow:/data
    ports:
      - 50222:50222/udp
  #####################################################
  rtl433:
    container_name: rtl433
    image: hertzg/rtl_433:22.11
    restart: unless-stopped
    devices:
      - "/dev/bus/usb/001/004"
    volumes:
      - "/opt/rtl433/rtl_433.conf:/opt/rtl433/rtl_433.conf"
    command:
      - "-c/opt/rtl433/rtl_433.conf"
  #####################################################
  esphome:
    container_name: esphome
    image: ghcr.io/esphome/esphome
    volumes:
      - /path/to/esphome/config:/config
      - /etc/localtime:/etc/localtime:ro
    restart: always
    privileged: true
    network_mode: host
    environment:
      - USERNAME=test
      - PASSWORD=ChangeMe
  #####################################################
  # bookstack:
  #   container_name: bookstack
  #   image: lscr.io/linuxserver/bookstack
  #   restart: always
  #   env_file:
  #     - ./.env-bookstack
  #   volumes:
  #     - bookstack:/config
  #   ports:
  #     - 6875:80
  #   depends_on:
  #     - bookstack_db
  # bookstack_db:
  #   container_name: bookstack_db
  #   image: lscr.io/linuxserver/mariadb
  #   restart: always
  #   env_file:
  #     - ./.env-bookstack
  #   volumes:
  #     - bookstack_db:/config
